{"version":3,"sources":["App/App.module.css","App/Content/PhotoSearch/PhotoList/PhotoCard/PhotoCard.module.css","App/_shared/useFlickr/getQuery.js","App/_shared/useFlickr/reducer.js","App/_shared/config.js","App/_shared/useFlickr/callFlickrEffect/flickr.js","App/_shared/useFlickr/callFlickrEffect/getRecentFlickr.js","App/_shared/useFlickr/callFlickrEffect/searchFlickr.js","App/_shared/useFlickr/callFlickrEffect/callFlickrEffect.js","App/_shared/useFlickr/useFlickr.js","App/Content/PhotoSearch/PhotoList/PhotoCard/PhotoAvatar/PhotoAvatar.jsx","App/Content/PhotoSearch/PhotoList/PhotoCard/PhotoCard.jsx","App/Content/PhotoSearch/PhotoList/PhotoList.jsx","App/Content/PhotoSearch/PhotoSearch.jsx","App/_shared/DebounceInput/DebounceInput.jsx","App/Content/SearchForm/SearchForm.jsx","App/Content/Content.jsx","App/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","getQuery","text","minTakenDate","maxTakenDate","trim","min_taken_date","startOf","unix","max_taken_date","endOf","reducer","state","action","type","query","page","loading","error","data","newData","photos","photo","Error","config","flickrApiKey","process","flickr","Flickr","getRecentFlickr","options","getRecent","searchFlickr","search","callFlickrEffect","successFn","errorFn","req","per_page","then","catch","abort","useFlickr","formQuery","useMemo","useReducer","dispatch","useEffect","res","body","err","fetchMore","useCallback","refetch","PhotoAvatar","props","src","farm","server","id","secret","shape","size","alt","title","PhotoCard","href","target","rel","className","styles","photoCard","hoverable","cover","PhotoList","style","width","margin","grid","gutter","column","dataSource","renderItem","item","Item","length","PhotoSearch","pageStart","loadMore","hasMore","pages","subTitle","span","textAlign","status","padding","extra","key","onClick","DebounceInput","handleChange","value","onChange","debounce","this","rest","e","Component","SearchForm","startDate","endDate","form","getFieldDecorator","getFieldValue","layout","label","xs","marginBottom","disabledDate","current","format","placeholder","Form","create","getFieldsValue","App","app","Header","Content","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"qHACAA,EAAOC,QAAU,CAAC,IAAM,mB,oBCAxBD,EAAOC,QAAU,CAAC,UAAY,+B,oTCOfC,EARE,SAACC,EAAMC,EAAcC,GACpC,MAAO,CACLF,KAAMA,GAAQA,EAAKG,OACnBC,eAAgBH,GAAgBA,EAAaI,QAAQ,OAAOC,OAC5DC,eAAgBL,GAAgBA,EAAaM,MAAM,OAAOF,S,SC2D/CG,EA/DC,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,gBACH,MAAO,CACLC,MAAM,eACDF,EAAOE,MADP,CAEHC,KAAM,IAERC,SAAS,EACTC,MAAO,KACPC,KAAM,MAGV,IAAK,cACH,MAAO,CACLJ,MAAOH,EAAMG,MACbE,SAAS,EACTC,MAAOL,EAAOK,MACdC,KAAMP,EAAMO,MAGhB,IAAK,gBACH,IAAMC,EAAO,eAAQP,EAAOM,MAS5B,OAPIP,EAAMO,MAAQP,EAAMO,KAAKE,OAAOC,QAClCF,EAAQC,OAAOC,MAAf,sBACKV,EAAMO,KAAKE,OAAOC,OADvB,YAEKF,EAAQC,OAAOC,SAIf,CACLP,MAAOH,EAAMG,MACbE,SAAS,EACTC,MAAO,KACPC,KAAMC,GAIV,IAAK,qBACH,MAAO,CACLL,MAAM,eACDH,EAAMG,MADN,CAEHC,KAAMJ,EAAMG,MAAMC,KAAO,IAE3BC,SAAS,EACTC,MAAO,KACPC,KAAMP,EAAMO,MAGhB,IAAK,UACH,MAAO,CACLJ,MAAOH,EAAMG,MACbE,SAAS,EACTC,MAAO,KACPC,KAAMP,EAAMO,MAGhB,QACE,MAAM,IAAII,MAAJ,8BAAiCV,EAAOC,KAAxC,mB,kBCvDGU,EAJA,CACbC,aAAa,GAAD,OAAKC,qCCIJC,EAFA,IAAIC,IAAOJ,EAAOC,cCGlBI,EAJS,SAACC,GACvB,OAAOH,EAAON,OAAOU,UAAUD,ICGlBE,EAJM,SAACF,GACpB,OAAOH,EAAON,OAAOY,OAAOH,ICyBfI,EAvBU,SAAChC,EAAMC,EAAcC,EAAcY,EAAMmB,EAAWC,GAC3E,IAAMC,EAAQnC,GAASC,GAAiBC,EAKpC4B,EAAa,CACb9B,KAAMA,EACNI,eAAgBH,EAChBM,eAAgBL,EAChBY,KAAMA,EACNsB,SAbU,KAIVT,EAAgB,CAChBb,KAAMA,EACNsB,SANU,KAoBd,OAJAD,EACGE,KAAKJ,GACLK,MAAMJ,GAEF,WACLC,GAAOA,EAAII,UC4CAC,EA/DG,SAACC,GACjB,IAAM5B,EAAQ6B,mBAAQ,WACpB,OAAO3C,EAAS0C,EAAUzC,KAAMyC,EAAUrC,eAAgBqC,EAAUlC,kBACnE,CAACkC,EAAUlC,eAAgBkC,EAAUrC,eAAgBqC,EAAUzC,OAHnC,EAKL2C,qBAAWlC,EAAS,CAC5CI,MAAM,eACDA,EADA,CAEHC,KAAM,IAERC,SAAS,EACTC,MAAO,KACPC,KAAM,OAZuB,mBAKxBP,EALwB,KAKjBkC,EALiB,KAe/BC,qBAAU,WACRD,EAAS,CACPhC,KAAM,gBACNC,MAAOA,MAER,CAAC+B,EAAU/B,IAEdgC,qBAAU,WACR,GAAKnC,EAAMK,QAAX,CAkBA,OAAOiB,EAAiBtB,EAAMG,MAAMb,KAAMU,EAAMG,MAAMT,eAAgBM,EAAMG,MAAMN,eAAgBG,EAAMG,MAAMC,MAd5F,SAACgC,GACjBF,EAAS,CACPhC,KAAM,gBACNK,KAAM6B,EAAIC,UAIE,SAACC,GACfJ,EAAS,CACPhC,KAAM,cACNI,MAAOgC,UAKV,CAACtC,EAAMK,QAASL,EAAMG,MAAMb,KAAMU,EAAMG,MAAMT,eAAgBM,EAAMG,MAAMN,eAAgBG,EAAMG,MAAMC,KAAM8B,IAE/G,IAAMK,EAAYC,uBAAY,WAC5BN,EAAS,CACPhC,KAAM,yBAEP,CAACgC,IAEEO,EAAUD,uBAAY,WAC1BN,EAAS,CACPhC,KAAM,cAEP,CAACgC,IAEJ,OAAO,eACFlC,EADL,CAEEuC,YACAE,a,mCC1CWC,EAlBK,SAACC,GAAW,IACtBjC,EAAUiC,EAAVjC,MAER,OACE,kBAAC,IAAD,CACEkC,IAAG,sBAAiBlC,EAAMmC,KAAvB,6BAAgDnC,EAAMoC,OAAtD,YAAgEpC,EAAMqC,GAAtE,YAA4ErC,EAAMsC,OAAlF,UACHC,MAAM,SACNC,KAAM,GACNC,IAAKzC,EAAM0C,MACXA,MAAO1C,EAAM0C,S,kBCmBJC,EA1BG,SAACV,GAAW,IACpBjC,EAAUiC,EAAVjC,MAER,OACE,uBACE4C,KAAI,sBAAiB5C,EAAMmC,KAAvB,6BAAgDnC,EAAMoC,OAAtD,YAAgEpC,EAAMqC,GAAtE,YAA4ErC,EAAMsC,OAAlF,UACJO,OAAO,SACPC,IAAI,uBAEJ,kBAAC,IAAD,CACEC,UAAWC,IAAOC,UAClBC,WAAS,EACTC,MACE,kBAAC,EAAD,CACEnD,MAAOA,QCeJoD,EA9BG,SAACnB,GAAW,IACpBlC,EAAWkC,EAAXlC,OAER,OACE,kBAAC,IAAD,CACEsD,MAAO,CAAEC,MAAO,IAAKC,OAAQ,QAC7BC,KAAM,CAAEC,OAAQ,GAAIC,OAAQ,GAC5BC,WAAY5D,EACZ6D,WAAY,SAACC,GACX,OACE,kBAAC,IAAKC,KAAN,KACE,kBAAC,EAAD,CACE9D,MAAO6D,OAOM,IAAlB9D,EAAOgE,QACN,kBAAC,IAAD,QCkDKC,EApEK,SAAC/B,GAAW,IACtBxC,EAAUwC,EAAVxC,MADqB,EAEwB2B,EAAU3B,GAAvDE,EAFqB,EAErBA,QAASC,EAFY,EAEZA,MAAOC,EAFK,EAELA,KAAMgC,EAFD,EAECA,UAAWE,EAFZ,EAEYA,QAEzC,OACE,kBAAC,IAAD,CACEkC,UAAW,EACXC,SAAUrC,EACVsC,SACGxE,IACAC,GACAC,GAASA,EAAKE,OAAOL,KAAOG,EAAKE,OAAOqE,OAIxCvE,GACC,kBAAC,EAAD,CACEE,OAAQF,EAAKE,OAAOC,QAKtBH,GACAA,EAAKE,OAAOC,MAAM+D,OAAS,GAC3BlE,EAAKE,OAAOL,MAAQG,EAAKE,OAAOqE,OAEhC,kBAAC,IAAD,CACE1B,MAAM,iBACN2B,SAAS,mBAIZ1E,GACC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE2E,KAAM,GACNjB,MAAO,CAAEkB,UAAW,WAEpB,kBAAC,IAAD,QAKL3E,GACC,kBAAC,IAAD,CACE4E,OAAO,QACP9B,MAAM,iBACN2B,SAAS,kDACThB,MAAO,CAAEoB,QAAS,IAClBC,MAAO,CACL,kBAAC,IAAD,CACEC,IAAK,EACLnF,KAAK,UACLoF,QAAS7C,GAHX,kB,yFCvBC8C,EA7BI,YACjB,WAAa5C,GAAQ,IAAD,8BAClB,4CAAMA,KAKR6C,aAAe,SAACC,IAEdC,EADqB,EAAK/C,MAAlB+C,UACCD,EAAMhG,SALf,EAAK+F,aAAeG,IAAS,EAAKH,aAAc,KAH9B,EADH,sEAYN,IAAD,SACmBI,KAAKjD,MAAdkD,GADV,EACAJ,MADA,0BAGR,OACE,kBAAC,IAAD,iBACMI,EADN,CAEEH,SAAU,SAACI,GAAQ,EAAKN,aAAaM,EAAEvC,OAAOkC,eAlBnC,GAAiBM,aCqFrBC,EArEI,SAACrD,GAAW,IARPsD,EAREC,EAiBhBC,EAASxD,EAATwD,KACAC,EAAqCD,EAArCC,kBAAmBC,EAAkBF,EAAlBE,cAE3B,OACE,kBAAC,IAAD,CACEC,OAAO,YAEP,kBAAC,IAAK9B,KAAN,CACE+B,MAAM,UAGJH,EAAkB,OAAlBA,CACE,kBAAC,EAAD,QAIN,kBAAC,IAAK5B,KAAN,CACE+B,MAAM,cAEN,kBAAC,IAAD,CACEpC,OAAQ,IAER,kBAAC,IAAD,CACEqC,GAAI,IAEJ,kBAAC,IAAKhC,KAAN,CACET,MAAO,CAAE0C,aAAc,IAGrBL,EAAkB,iBAAlBA,CACE,kBAAC,IAAD,CACEM,cAhDMR,EAgDyBG,EAAc,kBAhD3B,SAACM,GACrC,SAAKT,IAAYS,IAIVA,EAAUT,IA4CCU,OAAO,aACPC,YAAY,OACZ9C,MAAO,CAAEC,MAAO,aAM1B,kBAAC,IAAD,CACEwC,GAAI,IAEJ,kBAAC,IAAKhC,KAAN,CACET,MAAO,CAAE0C,aAAc,IAGrBL,EAAkB,iBAAlBA,CACE,kBAAC,IAAD,CACEM,cA1DIT,EA0DyBI,EAAc,kBA1DzB,SAACM,GACrC,SAAKV,IAAcU,IAIZA,EAAUV,IAsDCW,OAAO,aACPC,YAAY,KACZ9C,MAAO,CAAEC,MAAO,iBCjDrB8C,OAAKC,QAALD,EAnBC,SAACnE,GAAW,IAClBwD,EAASxD,EAATwD,KAER,OACE,6BACE,kBAAC,EAAD,CACEA,KAAMA,IAER,kBAAC,EAAD,CACEhG,MAAOgG,EAAKa,uBCULC,GApBH,WACV,OACE,yBACExD,UAAWC,IAAOwD,KAElB,kBAAC,IAAD,KACE,kBAAC,IAAOC,OAAR,KACE,oDAIF,kBAAC,IAAOC,QAAR,KACE,kBAAC,GAAD,MACA,kBAAC,IAAD,UCNJC,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOhH,GAC9BiH,UAAUC,cACPC,SAASH,GACTjG,MAAK,SAAAqG,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBlI,QACf6H,UAAUC,cAAcO,YAI1BC,QAAQC,IACN,iHAKE3H,GAAUA,EAAO4H,UACnB5H,EAAO4H,SAASR,KAMlBM,QAAQC,IAAI,sCAGR3H,GAAUA,EAAO6H,WACnB7H,EAAO6H,UAAUT,WAO5BpG,OAAM,SAAAtB,GACLgI,QAAQhI,MAAM,4CAA6CA,MC1FjEoI,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SDgB1C,SAAkBjI,GACvB,GAA6C,kBAAmBiH,UAAW,CAGzE,GADkB,IAAIiB,IAAIhI,uBAAwByG,OAAOC,SAASlE,MACpDyF,SAAWxB,OAAOC,SAASuB,OAIvC,OAGFxB,OAAOyB,iBAAiB,QAAQ,WAC9B,IAAMpB,EAAK,UAAM9G,uBAAN,sBAEPuG,KAgEV,SAAiCO,EAAOhH,GAEtCqI,MAAMrB,EAAO,CACXsB,QAAS,CAAE,iBAAkB,YAE5BvH,MAAK,SAAAwH,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASjE,QACO,MAAfkE,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CzB,UAAUC,cAAcyB,MAAM5H,MAAK,SAAAqG,GACjCA,EAAawB,aAAa7H,MAAK,WAC7B4F,OAAOC,SAASiC,eAKpB9B,GAAgBC,EAAOhH,MAG1BgB,OAAM,WACL0G,QAAQC,IACN,oEAvFAmB,CAAwB9B,EAAOhH,GAI/BiH,UAAUC,cAAcyB,MAAM5H,MAAK,WACjC2G,QAAQC,IACN,iHAMJZ,GAAgBC,EAAOhH,OCvC/BkH,K","file":"static/js/main.5d363f09.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__13Yue\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoCard\":\"PhotoCard_photoCard__3phY3\"};","const getQuery = (text, minTakenDate, maxTakenDate) => {\n  return {\n    text: text && text.trim(),\n    min_taken_date: minTakenDate && minTakenDate.startOf('day').unix(),\n    max_taken_date: maxTakenDate && maxTakenDate.endOf('day').unix()\n  }\n}\n\nexport default getQuery\n","const reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_NEW_QUERY':\n      return {\n        query: {\n          ...action.query,\n          page: 1\n        },\n        loading: true,\n        error: null,\n        data: null\n      }\n\n    case 'FETCH_ERROR':\n      return {\n        query: state.query,\n        loading: false,\n        error: action.error,\n        data: state.data\n      }\n\n    case 'FETCH_SUCCESS': {\n      const newData = { ...action.data }\n\n      if (state.data && state.data.photos.photo) {\n        newData.photos.photo = [\n          ...state.data.photos.photo,\n          ...newData.photos.photo\n        ]\n      }\n\n      return {\n        query: state.query,\n        loading: false,\n        error: null,\n        data: newData\n      }\n    }\n\n    case 'REQUEST_FETCH_MORE':\n      return {\n        query: {\n          ...state.query,\n          page: state.query.page + 1\n        },\n        loading: true,\n        error: null,\n        data: state.data\n      }\n\n    case 'REFETCH':\n      return {\n        query: state.query,\n        loading: true,\n        error: null,\n        data: state.data\n      }\n\n    default:\n      throw new Error(`Unknown action.type ${action.type} in reducer.`)\n  }\n}\n\nexport default reducer\n","const config = {\n  flickrApiKey: `${process.env.REACT_APP_FLICKR_API_KEY}`\n}\n\nexport default config\n","import Flickr from 'flickr-sdk'\nimport config from '../../config'\n\nconst flickr = new Flickr(config.flickrApiKey)\n\nexport default flickr\n","import flickr from './flickr'\n\nconst getRecentFlickr = (options) => {\n  return flickr.photos.getRecent(options)\n}\n\nexport default getRecentFlickr\n","import flickr from './flickr'\n\nconst searchFlickr = (options) => {\n  return flickr.photos.search(options)\n}\n\nexport default searchFlickr\n","import getRecentFlickr from './getRecentFlickr'\nimport searchFlickr from './searchFlickr'\n\nconst perPage = 30\n\nconst callFlickrEffect = (text, minTakenDate, maxTakenDate, page, successFn, errorFn) => {\n  const req = (!text && !minTakenDate && !maxTakenDate)\n    ? getRecentFlickr({\n      page: page,\n      per_page: perPage\n    })\n    : searchFlickr({\n      text: text,\n      min_taken_date: minTakenDate,\n      max_taken_date: maxTakenDate,\n      page: page,\n      per_page: perPage\n    })\n\n  req\n    .then(successFn)\n    .catch(errorFn)\n\n  return () => {\n    req && req.abort()\n  }\n}\n\nexport default callFlickrEffect\n","import { useCallback, useEffect, useMemo, useReducer } from 'react'\nimport getQuery from './getQuery'\nimport reducer from './reducer'\nimport callFlickrEffect from './callFlickrEffect/callFlickrEffect'\n\nconst useFlickr = (formQuery) => {\n  const query = useMemo(() => {\n    return getQuery(formQuery.text, formQuery.min_taken_date, formQuery.max_taken_date)\n  }, [formQuery.max_taken_date, formQuery.min_taken_date, formQuery.text])\n\n  const [state, dispatch] = useReducer(reducer, {\n    query: {\n      ...query,\n      page: 1\n    },\n    loading: true,\n    error: null,\n    data: null\n  })\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_NEW_QUERY',\n      query: query\n    })\n  }, [dispatch, query])\n\n  useEffect(() => {\n    if (!state.loading) {\n      return\n    }\n\n    const successFn = (res) => {\n      dispatch({\n        type: 'FETCH_SUCCESS',\n        data: res.body\n      })\n    }\n\n    const errorFn = (err) => {\n      dispatch({\n        type: 'FETCH_ERROR',\n        error: err\n      })\n    }\n\n    return callFlickrEffect(state.query.text, state.query.min_taken_date, state.query.max_taken_date, state.query.page, successFn, errorFn)\n  }, [state.loading, state.query.text, state.query.min_taken_date, state.query.max_taken_date, state.query.page, dispatch])\n\n  const fetchMore = useCallback(() => {\n    dispatch({\n      type: 'REQUEST_FETCH_MORE'\n    })\n  }, [dispatch])\n\n  const refetch = useCallback(() => {\n    dispatch({\n      type: 'REFETCH'\n    })\n  }, [dispatch])\n\n  return {\n    ...state,\n    fetchMore,\n    refetch\n  }\n}\n\nexport default useFlickr\n","import { Avatar } from 'antd'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst PhotoAvatar = (props) => {\n  const { photo } = props\n\n  return (\n    <Avatar\n      src={`https://farm${photo.farm}.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}_s.jpg`}\n      shape='square'\n      size={75}\n      alt={photo.title}\n      title={photo.title}\n    />\n  )\n}\n\nPhotoAvatar.propTypes = {\n  photo: PropTypes.object.isRequired\n}\n\nexport default PhotoAvatar\n","import { Card } from 'antd'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport PhotoAvatar from './PhotoAvatar/PhotoAvatar'\nimport styles from './PhotoCard.module.css'\n\nconst PhotoCard = (props) => {\n  const { photo } = props\n\n  return (\n    <a\n      href={`https://farm${photo.farm}.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}_b.jpg`}\n      target='_blank'\n      rel='noopener noreferrer'\n    >\n      <Card\n        className={styles.photoCard}\n        hoverable\n        cover={\n          <PhotoAvatar\n            photo={photo}\n          />\n        }\n      />\n    </a>\n  )\n}\n\nPhotoCard.propTypes = {\n  photo: PropTypes.object.isRequired\n}\n\nexport default PhotoCard\n","import { Empty, List } from 'antd'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport PhotoCard from './PhotoCard/PhotoCard'\n\nconst PhotoList = (props) => {\n  const { photos } = props\n\n  return (\n    <List\n      style={{ width: 257, margin: 'auto' }}\n      grid={{ gutter: 16, column: 3 }}\n      dataSource={photos}\n      renderItem={(item) => {\n        return (\n          <List.Item>\n            <PhotoCard\n              photo={item}\n            />\n          </List.Item>\n        )\n      }}\n    >\n      {\n        (photos.length === 0) &&\n          <Empty />\n      }\n    </List>\n  )\n}\n\nPhotoList.propTypes = {\n  photos: PropTypes.array.isRequired\n}\n\nexport default PhotoList\n","import { Button, Col, Result, Row, Spin } from 'antd'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport useFlickr from '../../_shared/useFlickr/useFlickr'\nimport PhotoList from './PhotoList/PhotoList'\n\nconst PhotoSearch = (props) => {\n  const { query } = props\n  const { loading, error, data, fetchMore, refetch } = useFlickr(query)\n\n  return (\n    <InfiniteScroll\n      pageStart={1}\n      loadMore={fetchMore}\n      hasMore={(\n        !loading &&\n        !error &&\n        (data && (data.photos.page < data.photos.pages))\n      )}\n    >\n      {\n        (data) &&\n          <PhotoList\n            photos={data.photos.photo}\n          />\n      }\n      {\n        (\n          data &&\n          data.photos.photo.length > 0 &&\n          data.photos.page >= data.photos.pages\n        ) &&\n          <Result\n            title='End of result.'\n            subTitle='End of result.'\n          />\n      }\n      {\n        (loading) &&\n          <Row>\n            <Col\n              span={24}\n              style={{ textAlign: 'center' }}\n            >\n              <Spin />\n            </Col>\n          </Row>\n      }\n      {\n        (error) &&\n          <Result\n            status='error'\n            title='Request Failed'\n            subTitle='Please try again later or contact system admin.'\n            style={{ padding: 16 }}\n            extra={[\n              <Button\n                key={0}\n                type='primary'\n                onClick={refetch}\n              >\n                Try again\n              </Button>\n            ]}\n          />\n      }\n    </InfiniteScroll>\n  )\n}\n\nPhotoSearch.propTypes = {\n  query: PropTypes.object\n}\n\nexport default PhotoSearch\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Input } from 'antd'\nimport debounce from 'lodash/debounce'\n\nconst DebounceInput = class extends Component {\n  constructor (props) {\n    super(props)\n\n    this.handleChange = debounce(this.handleChange, 300)\n  }\n\n  handleChange = (value) => {\n    const { onChange } = this.props\n    onChange(value.trim())\n  }\n\n  render () {\n    const { value, ...rest } = this.props\n\n    return (\n      <Input\n        {...rest}\n        onChange={(e) => { this.handleChange(e.target.value) }}\n      />\n    )\n  }\n}\n\nDebounceInput.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func\n}\n\nexport default DebounceInput\n","import { Col, DatePicker, Form, Row } from 'antd'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport DebounceInput from '../../_shared/DebounceInput/DebounceInput'\n\nconst disableStartDate = (endDate) => (current) => {\n  if (!endDate || !current) {\n    return false\n  }\n\n  return current > endDate\n}\n\nconst disableEndDate = (startDate) => (current) => {\n  if (!startDate || !current) {\n    return false\n  }\n\n  return current < startDate\n}\n\nconst SearchForm = (props) => {\n  const { form } = props\n  const { getFieldDecorator, getFieldValue } = form\n\n  return (\n    <Form\n      layout='vertical'\n    >\n      <Form.Item\n        label='Search'\n      >\n        {\n          getFieldDecorator('text')(\n            <DebounceInput />\n          )\n        }\n      </Form.Item>\n      <Form.Item\n        label='Date Taken'\n      >\n        <Row\n          gutter={16}\n        >\n          <Col\n            xs={12}\n          >\n            <Form.Item\n              style={{ marginBottom: 0 }}\n            >\n              {\n                getFieldDecorator('min_taken_date')(\n                  <DatePicker\n                    disabledDate={disableStartDate(getFieldValue('max_taken_date'))}\n                    format='YYYY-MM-DD'\n                    placeholder='From'\n                    style={{ width: '100%' }}\n                  />\n                )\n              }\n            </Form.Item>\n          </Col>\n          <Col\n            xs={12}\n          >\n            <Form.Item\n              style={{ marginBottom: 0 }}\n            >\n              {\n                getFieldDecorator('max_taken_date')(\n                  <DatePicker\n                    disabledDate={disableEndDate(getFieldValue('min_taken_date'))}\n                    format='YYYY-MM-DD'\n                    placeholder='To'\n                    style={{ width: '100%' }}\n                  />\n                )\n              }\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form.Item>\n    </Form>\n  )\n}\n\nSearchForm.propTypes = {\n  form: PropTypes.object\n}\n\nexport default SearchForm\n","import { Form } from 'antd'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport PhotoSearch from './PhotoSearch/PhotoSearch'\nimport SearchForm from './SearchForm/SearchForm'\n\nconst Content = (props) => {\n  const { form } = props\n\n  return (\n    <div>\n      <SearchForm\n        form={form}\n      />\n      <PhotoSearch\n        query={form.getFieldsValue()}\n      />\n    </div>\n  )\n}\n\nContent.propTypes = {\n  form: PropTypes.object\n}\n\nexport default Form.create()(Content)\n","import React from 'react'\nimport { BackTop, Layout } from 'antd'\nimport styles from './App.module.css'\nimport Content from './Content/Content'\n\nconst App = () => {\n  return (\n    <div\n      className={styles.app}\n    >\n      <Layout>\n        <Layout.Header>\n          <h1>\n            React Image Gallery\n          </h1>\n        </Layout.Header>\n        <Layout.Content>\n          <Content />\n          <BackTop />\n        </Layout.Content>\n      </Layout>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}